/**
 * build.gradle
 */

def PROJECT_NAME = 'Utilities'
def PROJECT_NAME_LOWER = 'util'
def PROJECT_VENDOR = 'Inexas'
def PROJECT_GROUP = 'inexas'
def PROJECT_VERSION = '0.1.0'
def PROJECT_DESCRIPTION = 'Inexas utilities'
def PROJECT_URL = 'http://www.inexas.org'

// Compiler configuration
def PROJECT_JAVA_VERSION = '1.8'

apply plugin: 'java'
// Gradle info, see .../build/reports/project/ dependencies, properties, tasks
apply plugin: 'project-report'	// For lots of reports
apply plugin: 'eclipse'			// To be able to create an Eclipse project
apply plugin: 'eclipse-wtp'		// To update Eclipse WTP profile
apply plugin: 'war'				// To build a war file
apply plugin: 'jetty'			// To allow it to run on a web server
apply plugin:'application'		// To add a run task
apply plugin: 'maven'			// To create the meta data (pom.xml) and take care of moving build to repo
apply plugin: 'signing'			// Sign the JAR file

defaultTasks 'compileTestJava'	

repositories {
	flatDir {
		dirs LocalRepository
	}
	mavenCentral()
}

// Do I need the following???
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

// End ???

group = PROJECT_GROUP
version = PROJECT_VERSION
sourceCompatibility = PROJECT_JAVA_VERSION
description = PROJECT_DESCRIPTION
archivesBaseName = 'com.inexas.' + PROJECT_NAME_LOWER

sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'resources'
		}
	}
	test {
		java {
			srcDir 'srctest'
		}
		resources {
			srcDir 'resourcestest'
		}
	}
}

// Application task...
mainClassName = "hello.HelloWorld"   
//applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

test {
	enableAssertions true
}

jar {
	manifest {
		attributes(
			// todo "Name": "PROJECT_DESCRIPTION",
			"Specification-Title": PROJECT_DESCRIPTION,
			"Specification-Version": PROJECT_VERSION,
			"Specification-Vendor": PROJECT_VENDOR,
			"Implementation-Title": PROJECT_DESCRIPTION,
			"Implementation-Version": PROJECT_VERSION,
			"Implementation-Vendor": PROJECT_VENDOR
		)
	}
}

dependencies {
	testCompile 'junit:junit:4.11'
	compile 'com.googlecode.json-simple:json-simple:1.1.1'
	compile 'com.google.code.gson:gson:2.3.1'
}


uploadArchives {
	repositories {
		flatDir {
			dirs 'repos'
		}

		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}
	
			// See ~/.gradle/gradle.properties for ossUsername & ossPassword
			
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossUsername, password: ossPassword)
			}
	
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossUsername, password: ossPassword)
			}
	
			pom.project {
				name PROJECT_NAME
				packaging 'jar'
				description PROJECT_DESCRIPTION
				url PROJECT_URL
	
				scm {
					url 'https://github.com/inexas/' + PROJECT_NAME_LOWER
					connection 'scm:git:git://github.com/inexas/'+ PROJECT_NAME_LOWER + '.git'
					developerConnection 'scm:git:git@github.com:inexas/'+ PROJECT_NAME_LOWER + '.git'
				}
	
				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
	
				developers {
					developer {
						id 'kwhittingham'
						name 'Keith Whittingham'
						email 'kwhittingham@gmail.com'
					}
				}
			}
		}
	}
}
